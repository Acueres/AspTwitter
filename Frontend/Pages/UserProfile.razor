@page "/{username}"

@using Frontend.Models

@inject HttpClient client

@if (User is not null)
{
<div class="container-fluid border-left border-right border-secondary">
    <ProfileHeader @ref="profileHeader" user="@User" tweetCount="@entries.Count"></ProfileHeader>

    @if (entries.Count == 0 && !noContent)
    {
        <div class="d-flex justify-content-center mt-5">
            <div class="spinner-border" style="color: whitesmoke;" role="status"></div>
        </div>
    }

    @if (noContent)
    {
        <div class="d-flex justify-content-center mt-5">
            <h3 class="text-light">No tweets</h3>
        </div>
    }

    @foreach (Entry entry in entries)
    {
        <Tweet entry="@entry"></Tweet>
    }
</div>
}

@code {
    [Parameter]
    public string Username { get; set; }

    private User User { get; set; }

    private List<Entry> entries = new();

    private bool noContent = false;

    private ProfileHeader profileHeader;

    protected override async Task OnParametersSetAsync()
    {
        User = await client.GetFromJsonAsync<User>($"api/users/username/{Username}");
        entries = await client.GetFromJsonAsync<List<Entry>>($"api/users/{User.Id}/entries");

        noContent = false;
        if (entries.Count == 0)
        {
            noContent = true;
        }
    }
}
