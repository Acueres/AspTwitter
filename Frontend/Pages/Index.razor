@page "/"

@using Blazored.LocalStorage
@using Frontend.Models;
@using System.Net
@using System.Net.Http
@using Newtonsoft.Json

@inject AppUser appUser 
@inject HttpClient client
@inject ILocalStorageService localStorage

<div class="container-fluid border border-secondary">
    @if (entries.Count == 0)
    {
        <div class="d-flex justify-content-center m-5">
            <div class="spinner-border" style="color: whitesmoke;" role="status"></div>
        </div>
    }

    @foreach (Entry entry in entries)
    {
        @if (entry is not null)
        {
            <Tweet entry="@entry" entries="@entries"></Tweet>
        }
    }

    @if (entries.Count != 0)
    {
        <div class="d-flex justify-content-center p-3">
            <button type="button" class="btn btn-dark" @onclick="() => LoadEntries()">Load more</button>
        </div>
    }
</div>

@code{
    private List<Entry> entries = new();
    private int part = 1;

    protected override async Task OnInitializedAsync()
    {
        entries = await client.GetFromJsonAsync<List<Entry>>("api/entries/partial/0");
    }

    private string GetDate(DateTime timestamp)
    {
        return timestamp.Date.ToString("dd/M/yyyy");
    }

    private async Task LoadEntries()
    {
        var response = await client.GetAsync($"api/entries/partial/{part}");

        if (response.StatusCode != HttpStatusCode.OK) return;

        string result = await response.Content.ReadAsStringAsync();
        List<Entry> additionalEntries = JsonConvert.DeserializeObject<List<Entry>>(result);

        if (additionalEntries is not null)
        {
            entries = entries.Concat(additionalEntries).ToList();
            part++;
        }
    }
}
